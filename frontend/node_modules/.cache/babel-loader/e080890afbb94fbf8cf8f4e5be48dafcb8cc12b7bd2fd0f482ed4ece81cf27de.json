{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\Task Manager\\\\frontend\\\\src\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n//import Form from 'react-bootstrap/Form';\nimport './App.css';\n//import axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport axiosInstance from './interceptor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Register() {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    conformPassword: ''\n  });\n  const [formErrors, setFormErrors] = useState({\n    username: '',\n    email: '',\n    password: '',\n    conformPassword: '',\n    error: ''\n  });\n  const navigate = useNavigate();\n  const updateFormData = (field, value) => {\n    setFormData(prevData => ({\n      ...prevData,\n      [field]: value\n    }));\n  };\n  const validateForm = () => {\n    let valid = true;\n    const newFormErrors = {\n      ...formErrors\n    };\n    if (formData.username.trim() === '') {\n      newFormErrors.username = 'Username is required';\n      valid = false;\n    } else if (formData.username.trim().length < 5) {\n      newFormErrors.username = 'Username must have 5 or more characters';\n      valid = false;\n    }\n    if (formData.email.trim() === '') {\n      newFormErrors.email = 'Email is required';\n      valid = false;\n    }\n    if (formData.password.trim() === '') {\n      newFormErrors.password = 'Password is required';\n      valid = false;\n    } else if (formData.password.trim().length < 5) {\n      newFormErrors.password = 'Password must have 5 or more characters';\n      valid = false;\n    }\n    if (formData.conformPassword.trim() === '') {\n      newFormErrors.conformPassword = 'Confirm password is required';\n      valid = false;\n    } else if (formData.conformPassword !== formData.password) {\n      newFormErrors.conformPassword = 'Confirm password does not match with password';\n      valid = false;\n    }\n    setFormErrors(newFormErrors);\n    return valid;\n  };\n  const handleRegister = async () => {\n    if (validateForm()) {\n      try {\n        await axiosInstance.post('/user/registerUser', {\n          username: formData.username,\n          password: formData.password,\n          email: formData.email\n        });\n        navigate('/');\n      } catch (err) {\n        setFormErrors(prevErrors => ({\n          ...prevErrors,\n          error: 'This username is already registered'\n        }));\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"fullscreen-image\",\n      src: \"./images/task.jpg\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title-container\",\n      style: {\n        color: \"orange\"\n      },\n      children: \"Task Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 94\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 100\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        value: formData.username,\n        onChange: e => updateFormData('username', e.target.value),\n        placeholder: \"Enter username\",\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'red'\n        },\n        children: formErrors.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        type: \"text\",\n        value: formData.email,\n        onChange: e => updateFormData('email', e.target.value),\n        placeholder: \"Enter email\",\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'red'\n        },\n        children: formErrors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"password\",\n        type: \"password\",\n        value: formData.password,\n        onChange: e => updateFormData('password', e.target.value),\n        placeholder: \"Enter password\",\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'red'\n        },\n        children: formErrors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"conformPassword\",\n        type: \"password\",\n        value: formData.conformPassword,\n        onChange: e => updateFormData('conformPassword', e.target.value),\n        placeholder: \"Enter confirm password\",\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'red'\n        },\n        children: formErrors.conformPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 87\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: handleRegister,\n        children: \" Register \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 101\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        style: {\n          color: \"red\"\n        },\n        children: formErrors.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"HyuaLCg5qUBgo19TGVR0OR9XXfQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","Link","axiosInstance","jsxDEV","_jsxDEV","Register","_s","formData","setFormData","username","email","password","conformPassword","formErrors","setFormErrors","error","navigate","updateFormData","field","value","prevData","validateForm","valid","newFormErrors","trim","length","handleRegister","post","err","prevErrors","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","color","id","type","onChange","e","target","placeholder","onClick","to","_c","$RefreshReg$"],"sources":["C:/Code/Task Manager/frontend/src/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n//import Form from 'react-bootstrap/Form';\r\nimport './App.css';\r\n//import axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport axiosInstance  from './interceptor';\r\n\r\nexport function Register() {\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        conformPassword: ''\r\n    });\r\n    const [formErrors, setFormErrors] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        conformPassword: '',\r\n        error: ''\r\n    });\r\n    const navigate = useNavigate();\r\n\r\n    const updateFormData = (field, value) => {\r\n        setFormData(prevData => ({\r\n            ...prevData,\r\n            [field]: value\r\n        }));\r\n    };\r\n\r\n    const validateForm = () => {\r\n        let valid = true;\r\n        const newFormErrors = { ...formErrors };\r\n\r\n        if (formData.username.trim() === '') {\r\n            newFormErrors.username = 'Username is required';\r\n            valid = false;\r\n        } else if (formData.username.trim().length < 5) {\r\n            newFormErrors.username = 'Username must have 5 or more characters';\r\n            valid = false;\r\n        }\r\n\r\n        if (formData.email.trim() === '') {\r\n            newFormErrors.email = 'Email is required';\r\n            valid = false;\r\n        }\r\n\r\n        if (formData.password.trim() === '') {\r\n            newFormErrors.password = 'Password is required';\r\n            valid = false;\r\n        } else if (formData.password.trim().length < 5) {\r\n            newFormErrors.password = 'Password must have 5 or more characters';\r\n            valid = false;\r\n        }\r\n\r\n        if (formData.conformPassword.trim() === '') {\r\n            newFormErrors.conformPassword = 'Confirm password is required';\r\n            valid = false;\r\n        } else if (formData.conformPassword !== formData.password) {\r\n            newFormErrors.conformPassword = 'Confirm password does not match with password';\r\n            valid = false;\r\n        }\r\n\r\n        setFormErrors(newFormErrors);\r\n        return valid;\r\n    };\r\n\r\n    const handleRegister = async () => {\r\n        if (validateForm()) {\r\n            try {\r\n\r\n                 await axiosInstance.post('/user/registerUser', {\r\n                    username: formData.username,\r\n                    password: formData.password ,\r\n                   email:formData.email\r\n                    \r\n                });\r\n                \r\n               \r\n                    navigate('/');\r\n                \r\n            } catch (err) {\r\n                setFormErrors(prevErrors => ({\r\n                    ...prevErrors,\r\n                    error: 'This username is already registered'\r\n                }));\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <img className=\"fullscreen-image\" src=\"./images/task.jpg\" alt=''/>\r\n            <h1 className = \"title-container\" style={{ color: \"orange\"}}>Task Management</h1><br /><br />\r\n            <div className=\"form\">\r\n                <h2>Register Here</h2>\r\n\r\n                <input id=\"username\" type=\"text\" value={formData.username}  onChange={(e) => updateFormData('username', e.target.value)} \r\n                     placeholder=\"Enter username\"  className=\"input-field\"/>\r\n                <span style={{ color: 'red' }}>{formErrors.username}</span>\r\n\r\n                <input id=\"email\" type=\"text\" value={formData.email}\r\n                            onChange={(e) => updateFormData('email', e.target.value)} \r\n                            placeholder=\"Enter email\"  className=\"input-field\"/>\r\n                  <span style={{ color: 'red' }}>{formErrors.email}</span>\r\n\r\n                <input id=\"password\" type=\"password\" value={formData.password}\r\n                            onChange={(e) => updateFormData('password', e.target.value)} \r\n                            placeholder=\"Enter password\"  className=\"input-field\"/>\r\n                    <span style={{ color: 'red' }}>{formErrors.password}</span>\r\n\r\n                    <input id=\"conformPassword\"  type=\"password\" value={formData.conformPassword}\r\n                            onChange={(e) => updateFormData('conformPassword', e.target.value)} \r\n                            placeholder=\"Enter confirm password\"  className=\"input-field\"/>\r\n                    <span style={{ color: 'red' }}>{formErrors.conformPassword}</span><br/>\r\n\r\n                    <button className=\"btn btn-success\" onClick={handleRegister}> Register </button><br />\r\n                    <Link to=\"/\" style={{color:\"red\"}}>{formErrors.error}</Link>   \r\n                          \r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}