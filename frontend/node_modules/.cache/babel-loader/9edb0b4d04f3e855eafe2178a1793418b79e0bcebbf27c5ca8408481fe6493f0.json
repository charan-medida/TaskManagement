{"ast":null,"code":"import axios from 'axios';\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:5005'\n});\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) config.headers['Authorization'] = `Bearer ${token}`;\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject"],"sources":["C:/Code/Task Manager/frontend/src/aI.js"],"sourcesContent":["import axios from 'axios'\r\n\r\n    const axiosInstance  = axios.create({\r\n        baseURL: 'http://localhost:5005'\r\n    });\r\n\r\n    axiosInstance.interceptors.request.use(\r\n        (config) => {\r\n            \r\n            const token = localStorage.getItem('token');\r\n            if(token)\r\n                config.headers['Authorization'] = `Bearer ${token}`;\r\n            return config;\r\n        },\r\n        (error) => {\r\n            return Promise.reject(error);\r\n        }\r\n    );\r\n\r\n    export default axiosInstance;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAErB,MAAMC,aAAa,GAAID,KAAK,CAACE,MAAM,CAAC;EAChCC,OAAO,EAAE;AACb,CAAC,CAAC;AAEFF,aAAa,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACjCC,MAAM,IAAK;EAER,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAGF,KAAK,EACJD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EACvD,OAAOD,MAAM;AACjB,CAAC,EACAK,KAAK,IAAK;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAeX,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}