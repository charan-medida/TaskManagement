{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\Task Manager\\\\frontend\\\\src\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport './App.css';\n//import axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport axiosInstance from './interceptor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Register() {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    conformPassword: ''\n  });\n  const [formErrors, setFormErrors] = useState({\n    username: '',\n    email: '',\n    password: '',\n    conformPassword: '',\n    error: ''\n  });\n  const navigate = useNavigate();\n  const updateFormData = (field, value) => {\n    setFormData(prevData => ({\n      ...prevData,\n      [field]: value\n    }));\n  };\n  const validateForm = () => {\n    let valid = true;\n    const newFormErrors = {\n      ...formErrors\n    };\n    if (formData.username.trim() === '') {\n      newFormErrors.username = 'Username is required';\n      valid = false;\n    } else if (formData.username.trim().length < 5) {\n      newFormErrors.username = 'Username must have 5 or more characters';\n      valid = false;\n    }\n    if (formData.email.trim() === '') {\n      newFormErrors.email = 'Email is required';\n      valid = false;\n    }\n    if (formData.password.trim() === '') {\n      newFormErrors.password = 'Password is required';\n      valid = false;\n    } else if (formData.password.trim().length < 5) {\n      newFormErrors.password = 'Password must have 5 or more characters';\n      valid = false;\n    }\n    if (formData.conformPassword.trim() === '') {\n      newFormErrors.conformPassword = 'Confirm password is required';\n      valid = false;\n    } else if (formData.conformPassword !== formData.password) {\n      newFormErrors.conformPassword = 'Confirm password does not match with password';\n      valid = false;\n    }\n    setFormErrors(newFormErrors);\n    return valid;\n  };\n  const handleRegister = async () => {\n    if (validateForm()) {\n      try {\n        await axiosInstance.post('/user/register', {\n          username: formData.username,\n          password: formData.password,\n          email: formData.email\n        });\n        navigate('/');\n      } catch (err) {\n        setFormErrors(prevErrors => ({\n          ...prevErrors,\n          error: 'This username is already registered'\n        }));\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"left-margin\",\n      style: {\n        color: 'blue'\n      },\n      children: \"Register Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 85\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 91\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\"Username:\", /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"username\",\n            type: \"text\",\n            value: formData.username,\n            onChange: e => updateFormData('username', e.target.value),\n            placeholder: \"Enter username\",\n            className: \"input-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: formErrors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\"Email:\", /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"email\",\n            type: \"text\",\n            value: formData.email,\n            onChange: e => updateFormData('email', e.target.value),\n            placeholder: \"Enter email\",\n            className: \"input-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: formErrors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\"Password:\", /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"password\",\n            type: \"password\",\n            value: formData.password,\n            onChange: e => updateFormData('password', e.target.value),\n            placeholder: \"Enter password\",\n            className: \"input-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: formErrors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"conformPassword\",\n            type: \"password\",\n            value: formData.conformPassword,\n            onChange: e => updateFormData('conformPassword', e.target.value),\n            placeholder: \"Enter confirm password\",\n            className: \"input-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: formErrors.conformPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: handleRegister,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          style: {\n            color: \"red\"\n          },\n          children: formErrors.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"HyuaLCg5qUBgo19TGVR0OR9XXfQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","Form","Link","axiosInstance","jsxDEV","_jsxDEV","Register","_s","formData","setFormData","username","email","password","conformPassword","formErrors","setFormErrors","error","navigate","updateFormData","field","value","prevData","validateForm","valid","newFormErrors","trim","length","handleRegister","post","err","prevErrors","children","className","style","color","fileName","_jsxFileName","lineNumber","columnNumber","Control","id","type","onChange","e","target","placeholder","onClick","to","_c","$RefreshReg$"],"sources":["C:/Code/Task Manager/frontend/src/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Form from 'react-bootstrap/Form';\r\nimport './App.css';\r\n//import axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport axiosInstance  from './interceptor';\r\n\r\nexport function Register() {\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        conformPassword: ''\r\n    });\r\n    const [formErrors, setFormErrors] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        conformPassword: '',\r\n        error: ''\r\n    });\r\n    const navigate = useNavigate();\r\n\r\n    const updateFormData = (field, value) => {\r\n        setFormData(prevData => ({\r\n            ...prevData,\r\n            [field]: value\r\n        }));\r\n    };\r\n\r\n    const validateForm = () => {\r\n        let valid = true;\r\n        const newFormErrors = { ...formErrors };\r\n\r\n        if (formData.username.trim() === '') {\r\n            newFormErrors.username = 'Username is required';\r\n            valid = false;\r\n        } else if (formData.username.trim().length < 5) {\r\n            newFormErrors.username = 'Username must have 5 or more characters';\r\n            valid = false;\r\n        }\r\n\r\n        if (formData.email.trim() === '') {\r\n            newFormErrors.email = 'Email is required';\r\n            valid = false;\r\n        }\r\n\r\n        if (formData.password.trim() === '') {\r\n            newFormErrors.password = 'Password is required';\r\n            valid = false;\r\n        } else if (formData.password.trim().length < 5) {\r\n            newFormErrors.password = 'Password must have 5 or more characters';\r\n            valid = false;\r\n        }\r\n\r\n        if (formData.conformPassword.trim() === '') {\r\n            newFormErrors.conformPassword = 'Confirm password is required';\r\n            valid = false;\r\n        } else if (formData.conformPassword !== formData.password) {\r\n            newFormErrors.conformPassword = 'Confirm password does not match with password';\r\n            valid = false;\r\n        }\r\n\r\n        setFormErrors(newFormErrors);\r\n        return valid;\r\n    };\r\n\r\n    const handleRegister = async () => {\r\n        if (validateForm()) {\r\n            try {\r\n\r\n                 await axiosInstance.post('/user/register', {\r\n                    username: formData.username,\r\n                    password: formData.password ,\r\n                   email:formData.email\r\n                    \r\n                });\r\n                \r\n               \r\n                    navigate('/');\r\n                \r\n            } catch (err) {\r\n                setFormErrors(prevErrors => ({\r\n                    ...prevErrors,\r\n                    error: 'This username is already registered'\r\n                }));\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2 className='left-margin' style={{ color: 'blue' }}>Register Page</h2><br /><br />\r\n        <div className=\"App\">\r\n                \r\n\r\n                <div className=\"container\">\r\n                    <h6>Username:\r\n                        <Form.Control \r\n                            id=\"username\" \r\n                            type=\"text\" \r\n                            value={formData.username}\r\n                            onChange={(e) => updateFormData('username', e.target.value)} \r\n                            placeholder=\"Enter username\"  className=\"input-field\"\r\n                        />\r\n                    </h6>\r\n                    <span style={{ color: 'red' }}>{formErrors.username}</span>\r\n                </div>\r\n                \r\n\r\n                <div className=\"container\">\r\n                    <h6>Email:\r\n                        <Form.Control \r\n                            id=\"email\" \r\n                            type=\"text\" \r\n                            value={formData.email}\r\n                            onChange={(e) => updateFormData('email', e.target.value)} \r\n                            placeholder=\"Enter email\"  className=\"input-field\"\r\n                        />\r\n                    </h6>\r\n                    <span style={{ color: 'red' }}>{formErrors.email}</span>\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <h6>Password:\r\n                        <Form.Control \r\n                            id=\"password\" \r\n                            type=\"password\" \r\n                            value={formData.password}\r\n                            onChange={(e) => updateFormData('password', e.target.value)} \r\n                            placeholder=\"Enter password\"  className=\"input-field\"\r\n                        />\r\n                    </h6>\r\n                    <span style={{ color: 'red' }}>{formErrors.password}</span>\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <h6>Confirm Password:\r\n                        <Form.Control \r\n                            id=\"conformPassword\" \r\n                            type=\"password\" \r\n                            value={formData.conformPassword}\r\n                            onChange={(e) => updateFormData('conformPassword', e.target.value)} \r\n                            placeholder=\"Enter confirm password\"  className=\"input-field\"\r\n                        />\r\n                    </h6>\r\n                    <span style={{ color: 'red' }}>{formErrors.conformPassword}</span>\r\n                </div>\r\n\r\n                <div>\r\n                    <button \r\n                        className=\"btn btn-success\"\r\n                        onClick={handleRegister}\r\n                    >\r\n                        Register\r\n                    </button><br />\r\n                    <Link to=\"/\" style={{color:\"red\"}}>{formErrors.error}</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}